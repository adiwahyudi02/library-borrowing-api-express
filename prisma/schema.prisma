// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Guard {
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  email String @db.VarChar(100) @unique
  password String @db.VarChar(100)
  access_token String? @db.VarChar(100)
  createdAt DateTime @default(now())

  @@map("guards")
}

model Book {
  id Int @id @default(autoincrement())
  title String @unique
  author String
  stock Int
  createdAt DateTime @default(now())

  // Relations
  borrowings Borrowing[]

  @@map("books")
}

model Member {
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  email String @db.VarChar(100) @unique
  phone String? @db.VarChar(20)
  createdAt DateTime @default(now())

  // Relations
  borrowings Borrowing[]

  @@map("members")
}

model Borrowing {
  id Int @id @default(autoincrement())
  memberId Int
  bookId Int
  borrowDate DateTime @default(now())
  dueDate DateTime?
  returnDate DateTime?

  // Relations
  member Member @relation(fields: [memberId], references: [id])
  book Book @relation(fields: [bookId], references: [id])

  @@map("borrowings")
}
